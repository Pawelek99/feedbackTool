<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link
			href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500&display=swap"
			rel="stylesheet"
		/>
		<link
			rel="stylesheet"
			href="//use.fontawesome.com/releases/v5.13.0/css/all.css"
		/>
		<link rel="stylesheet" href="/styles/global/global.css" />
		<link rel="stylesheet" href="/styles/main/main.css" />
		<link rel="stylesheet" href="/styles/global/popup.css" />
		<script defer src="/reload/reload.js"></script>
		<script defer src="/public/refresh.js"></script>
		<title>Feedback tool</title>
	</head>
	<body>
		<div class="header">
			<% if (phase === 0) { %>
				<p class="title">My rooms (<a target='_blank' href='/add/<%= addLink %>'>Invite link</a>)</p>
			<% } else { %>
					<p class="title">My rooms</p>
			<% } %>
			<p class="timer">01:00:00</p>
			<button class="button" onclick="nextPhase()"
				<%= rooms.length > 1 && rooms.every(r => r.ready) ? '' : 'disabled' %>>
				<%= phase === 0 ? 'Agregate notes' : 'End session' %>
			</button>
		</div>
		<% if (rooms.length > 0) { %>
			<div class="cardContainer">
				<% rooms.forEach(function(room) { %>
				<div class="card">
					<div class="title"><%= room.name %></div>
					<% if (phase === 0) { %>
						<a class="more" onclick="removeRoom('<%= room.id %>')">&times;</a>
					<% } %>
					<ul class="lists">
						<% room.lists.forEach(function(list) { %>
						<li><%= list.name %> (<%= list.notes.length %> notes)</li>
						<% }); %>
					</ul>
					<% if (room.ready) { %>
					<div class="ready">Ready</div>
					<% } %>
				</div>
				<% }); %>
			</div>
		<% } else { %>
			<div class="emptyHolder">
				<img src="/public/add.svg" alt="Add room">
				<span class="title">Send <a target='_blank' href='/add/<%= addLink %>'>invite link</a> to your team</span>
			</div>
		<% } %>

		<script>
			let expirationTimestamp = <%= expirationTimestamp || 0 %>;

			const refreshTimer = async () => {
				const diff = expirationTimestamp - Date.now() / 1000;
				let hours = Math.floor(diff / (60 * 60));
				let minutes = Math.floor((diff - hours * 60 * 60) / 60);
				let seconds = Math.floor(diff - minutes * 60 - hours * 60 * 60);
				hours = hours < 10 ? '0' + hours : hours;
				minutes = minutes < 10 ? '0' + minutes : minutes;
				seconds = seconds < 10 ? '0' + seconds : seconds;
				document.querySelector('.timer').textContent = `${hours}:${minutes}:${seconds}`;

				if (seconds + minutes + hours <= 0) {
					await fetch('<%= process.env.URL %>/api/main/end', { method: 'POST' });
					window.location = '/notFound';
				}
			};

			setInterval(refreshTimer, 1000);
			refreshTimer();

			const removeRoom = async (id) => {
					await fetch(`<%= process.env.URL %>/api/rooms/${id}`, { method: 'DELETE' });
					window.location.reload();
			};

			const nextPhase = async () => {
				if (<%= phase %> === 1) {
					await fetch('<%= process.env.URL %>/api/main/end', { method: 'POST' });
					window.location = '/notFound';
				} else {
					await fetch('<%= process.env.URL %>/api/main/agregate', { method: 'POST' });
					window.location.reload();
				}
			};
		</script>
	</body>
</html>
